{"version":3,"sources":["../../es6/lib/files.js"],"names":["getCreativeInfo","getDirectoryBase","directoryExists","createProjectDirectory","multipleVersions","bannerSizes","Spinner","status","callback","info","name","type","message","validate","value","length","choices","prompt","then","basename","process","cwd","filepath","statSync","isDirectory","err","banner","start","rootPath","clientName","campaignName","stop","console","log","red","versions","newPath","v2","createTwoVersions","map","version","v3","v4","selectSizes","clone","green","yellow"],"mappings":"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","file":"files.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport inquirer from 'inquirer'\nimport chalk from 'chalk'\nimport mkdirp from 'mkdirp'\nimport CLI from 'clui'\nimport git from 'simple-git'\n\nlet Spinner = CLI.Spinner\nlet status = new Spinner('Downloading, please wait...')\n\nexport function getCreativeInfo (callback) {\n  var info = [\n    {\n      name: 'clientName',\n      type: 'input',\n      message: 'Enter the name of the client:',\n      validate: function (value) {\n        if (value.length) {\n          return true\n        } else {\n          return 'Please enter the name of the client'\n        }\n      }\n    },\n    {\n      name: 'campaignName',\n      type: 'input',\n      message: 'Enter the name of the campaign:',\n      validate: function (value) {\n        if (value.length) {\n          return true\n        } else {\n          return 'Please enter the campaign name'\n        }\n      }\n    },\n    {\n      name: 'versions',\n      type: 'list',\n      message: 'How many versions do these banners have?',\n      choices: [\n        'One',\n        'Two',\n        'Three',\n        'Four',\n        'Custom'\n      ],\n      validate: function (value) {\n        if (value.length) {\n          return true\n        } else {\n          return 'Please enter the campaign name'\n        }\n      }\n    },\n    {\n      name: 'selectSizes',\n      type: 'list',\n      message: 'Select the banner sizes:',\n      choices: [\n        'Standard',\n        'Desktop & Mobile',\n        'Full',\n        'Custom'\n      ],\n      validate: function (value) {\n        if (value.length) {\n          return true\n        } else {\n          return 'Please enter the campaign name'\n        }\n      }\n    }\n  ]\n  inquirer.prompt(info).then(callback)\n}\n\nexport function getDirectoryBase () {\n  return path.basename(process.cwd())\n}\n\nexport function directoryExists (filepath) {\n  try {\n    return fs.statSync(filepath).isDirectory()\n  } catch (err) {\n    return false\n  }\n}\n\nexport function createProjectDirectory (banner) {\n  status.start()\n  getDirectoryBase()\n  let rootPath = banner.clientName + '/' + banner.campaignName + '/production'\n  mkdirp(rootPath, (err) => {\n    if (err) {\n      status.stop()\n      console.log(chalk.red('AHH! Sorry, there was an error creating the directory: \\n') + err)\n    } else {\n      return multipleVersions(banner)\n    }\n  })\n}\n\nexport function multipleVersions (banner) {\n  let rootPath = banner.clientName + '/' + banner.campaignName + '/production'\n  if (banner.versions === 'One') {\n    let newPath = rootPath\n    return bannerSizes(banner, newPath)\n  }\n  if (banner.versions === 'Two') {\n    let v2 = ['v1', 'v2']\n    let createTwoVersions = v2.map((version) => {\n      let newPath = rootPath + '/' + version\n      mkdirp(newPath, (err) => {\n        if (err) {\n          status.stop()\n          console.log(chalk.red('Oh No! Sorry, there was an error creating the directory: \\n') + err)\n        } else {\n          return bannerSizes(banner, newPath)\n        }\n      })\n    })\n  }\n  if (banner.versions === 'Three') {\n    let v3 = ['v1', 'v2', 'v3']\n    let createTwoVersions = v3.map((version) => {\n      let newPath = rootPath + '/' + version\n      mkdirp(newPath, (err) => {\n        if (err) {\n          status.stop()\n          console.log(chalk.red('Oh No! Sorry, there was an error creating the \"GWD\" directory: \\n') + err)\n        } else {\n          return bannerSizes(banner, newPath)\n        }\n      })\n    })\n  }\n  if (banner.versions === 'Four') {\n    let v4 = ['v1', 'v2', 'v3', 'v4']\n    let createTwoVersions = v4.map((version) => {\n      let newPath = rootPath + '/' + version\n      mkdirp(newPath, (err) => {\n        if (err) {\n          status.stop()\n          console.log(chalk.red('Oh No! Sorry, there was an error creating the directory: \\n') + err)\n        } else {\n          return bannerSizes(banner, newPath)\n        }\n      })\n    })\n  }\n}\n\nexport function bannerSizes (banner, newPath) {\n  if (banner.selectSizes === 'Standard') {\n    git().clone('https://github.com/jamisonwight/Standard.git', newPath, (err) => {\n      if (err) {\n        return console.log('There was a problem with downloading the directory:' + err)\n      } else {\n        status.stop()\n        console.log(chalk.green('\\n\\n' + 'Woo! The directory ') + chalk.yellow(newPath) + chalk.green(' has been created!'))\n      }\n    })\n  }\n  if (banner.selectSizes === 'Desktop & Mobile') {\n    git().clone('https://github.com/jamisonwight/Desktop-Mobile.git', newPath, (err) => {\n      if (err) {\n        return console.log('There was a problem with downloading the directory:' + err)\n      } else {\n        status.stop()\n        console.log(chalk.green('\\n\\n' + 'Woo! The directory ') + chalk.yellow(newPath) + chalk.green(' has been created!'))\n      }\n    })\n  }\n  if (banner.selectSizes === 'Full') {\n    git().clone('https://github.com/jamisonwight/Full.git', newPath, (err) => {\n      if (err) {\n        return console.log('There was a problem with downloading the directory:' + err)\n      } else {\n        status.stop()\n        console.log(chalk.green('\\n\\n' + 'Woo! The directory ') + chalk.yellow(newPath) + chalk.green(' has been created!'))\n      }\n    })\n  // } else {\n  //   console.log(chalk.red('Failed to create banner files :('))\n  // }\n  }\n}\n"]}